{"version":3,"file":"static/js/193.71d9ef98.chunk.js","mappings":"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","sources":["userAuth/firebase-init.js","userAuth/firebase-config.js","components/Login/Login.styled.jsx","userAuth/signInGoogle.jsx","components/Login/Login.jsx","hooks/useToggle.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["\nimport { initializeApp } from 'firebase/app';\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { firebaseConfig } from './firebase-config'\nimport { getMessaging } from 'firebase/messaging/sw';\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const googleAuthProvider = new GoogleAuthProvider();\n\ngetMessaging(firebaseApp);\nconsole.info('Firebase messaging service worker is set up');","\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyAlkyoTEbpR1kpAqZ-6wCbWRC-9gl3ddAw\",\n  authDomain: \"auth-user-1a8df.firebaseapp.com\",\n  projectId: \"auth-user-1a8df\",\n  storageBucket: \"auth-user-1a8df.appspot.com\",\n  messagingSenderId: \"86157225034\",\n  appId: \"1:86157225034:web:f8448d8e8cf2ec80628ab3\"\n};\n\n","import styled from 'styled-components';\n\nexport const LoginBtn = styled.button`\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n  padding: 10px 15px;\n  background-color: beige;\n  box-shadow: 1px 1px 1px #393e46;\n  border-radius: 24px;\n  transition: transform 250ms, box-shadow 250ms;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-2px);\n    box-shadow: 3px 3px 3px #393e46;\n  }\n`;\n\nexport const NameUser = styled.h2`\ncolor: #393e46;\nfont-family: monospace;\nfont-size: 40px;\nmargin-top: 50px;\ntext-align: center;\n`;\n\n","import { Loader } from \"components\";\nimport { getAuth, signInWithPopup } from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { firebaseApp, googleAuthProvider } from \"./firebase-init\";\nimport { signOut } from \"firebase/auth\";\nimport { LoginBtn, NameUser } from \"components/Login/Login.styled\";\n\nexport const AuthProvider = ({ toggle }) => {\n    const auth = getAuth(firebaseApp);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const unsub = auth.onAuthStateChanged((maybeUser) => {\n            if (maybeUser != null) {\n                return setUser(maybeUser);\n            }\n\n            signInWithPopup(auth, googleAuthProvider)\n                .then((credentials) => setUser(credentials.user))\n                .catch(e => console.error(e));\n        });\n        return unsub;\n    }, [auth])\n\n    async function signOutUser(e) {\n        e.preventDefault();\n        console.log('signOutUser');\n        toggle();\n        try {\n            await signOut(getAuth());\n        }\n        catch (error) {\n            console.log(error);\n        };\n\n    }\n\n    return user != null\n        ? <>\n            <NameUser>Hello, {user.displayName}</NameUser>\n            <LoginBtn type=\"button\" onClick={signOutUser}>\n                Logout\n            </LoginBtn>\n        </>\n        : <Loader />;\n};\n","import { useToggle } from \"../../hooks/useToggle\";\nimport { AuthProvider } from 'userAuth/signInGoogle';\nimport { LoginBtn } from './Login.styled';\n\n\nexport const Login = () => {\n    const { isOpen, toggle } = useToggle();\n    return (\n        <>\n            {!!isOpen && <LoginBtn type=\"button\"\n                onClick={toggle}>Login</LoginBtn>}\n            {!isOpen && <AuthProvider toggle={toggle} />}\n        </>\n    );\n};\n\n","import { useState } from \"react\";\nexport const useToggle = () => {\n    const [isOpen, setIsOpen] = useState([]);\n    const open = () => setIsOpen(true);\n    const close = () => setIsOpen(false);\n    const toggle = () => setIsOpen(isOpen => !isOpen);\n\n    return { isOpen, open, close, toggle };\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { SearchForm, LoadButton, Gallery, Loader, Container } from 'components';\nimport { getCharacters, alertOnError, getSearchedCharacters, alertOnSearch, alertOnRepeatedQuery } from 'services';\nimport { Login } from 'components/Login/Login';\n\nexport default function HomePage() {\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getCards = async () => {\n      try {\n        setLoading(true);\n        const { characters, totalPages, cancel } = await getCharacters(\n          page,\n          controller.signal\n        );\n        if (cancel) return;\n        setCharacters(() => [...characters].sort((a, b) => a.name.localeCompare(b.name)));\n        setTotalPages(totalPages);\n\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCards();\n    return () => controller.abort();\n  }, [page, setSearchParams, setLoading]);\n\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n    const getCharacters = async () => {\n      try {\n        setLoading(true);\n        const { characters, totalResults, cancel } = await getSearchedCharacters(\n          query,\n          controller.signal\n        );\n        if (cancel) return;\n        alertOnSearch(characters.length, totalResults);\n        setCharacters(() => [...characters].sort((a, b) => a.name.localeCompare(b.name)));\n\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCharacters();\n    return () => controller.abort();\n  }, [query, setSearchParams, setLoading]);\n\n\n  useEffect(() => {\n    if (error) alertOnError();\n  }, [error]);\n\n  const searchFormSubmit = searchQuery => {\n    const normalizedQuery = searchQuery.trim().toLowerCase();\n    if (normalizedQuery === query) return alertOnRepeatedQuery(query);\n    setSearchParams({ query: normalizedQuery });\n\n  };\n\n  const onLoadMoreBtnClick = () => setPage(prevPage => prevPage + 1);\n\n  return (\n    <main>\n      <Container>\n        <Login />\n        <SearchForm onSubmit={searchFormSubmit} />\n        {loading && <Loader />}\n        <Gallery characters={characters} path={'/'} />\n        {!characters.length && <Gallery characters={characters} path={'/'} />}\n        {page !== totalPages && <LoadButton onClick={onLoadMoreBtnClick} />}\n      </Container>\n    </main>\n  );\n}\n"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleAuthProvider","GoogleAuthProvider","getMessaging","console","info","LoginBtn","styled","NameUser","AuthProvider","toggle","auth","getAuth","useState","user","setUser","e","preventDefault","log","signOut","useEffect","onAuthStateChanged","maybeUser","signInWithPopup","then","credentials","catch","error","displayName","type","onClick","Login","isOpen","setIsOpen","open","close","useToggle","HomePage","characters","setCharacters","page","setPage","totalPages","setTotalPages","useSearchParams","searchParams","setSearchParams","query","get","loading","setLoading","setError","controller","AbortController","getCards","getCharacters","signal","cancel","sort","a","b","name","localeCompare","abort","getSearchedCharacters","totalResults","alertOnSearch","length","alertOnError","onSubmit","searchQuery","normalizedQuery","trim","toLowerCase","alertOnRepeatedQuery","path","prevPage"],"sourceRoot":""}
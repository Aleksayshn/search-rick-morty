{"version":3,"file":"static/js/680.65ac4296.chunk.js","mappings":"oQAMe,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAE/B,GAA8BX,EAAAA,EAAAA,WAAS,GAAvC,eAAOY,EAAP,KAAgBC,EAAhB,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,MAAnC,eAAOc,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAQ,mCAAG,wGAEbN,GAAW,GAFE,UAGoCO,EAAAA,EAAAA,IAC/CjB,EACAc,EAAWI,QALA,mBAGLpB,EAHK,EAGLA,WAAYI,EAHP,EAGOA,YAHP,EAGmBiB,OAHnB,mDAQbpB,GAAc,kBAAM,OAAID,GAAYsB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,KAAjC,GAA3B,IACdpB,EAAcD,GATD,kDAYbU,EAAS,EAAD,IAZK,yBAcbF,GAAW,GAdE,6EAAH,qDAkBd,OADAM,IACO,kBAAMF,EAAWW,OAAjB,CACR,GAAE,CAACzB,EAAMM,EAAiBI,KAG3BG,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CACA,IAAMO,EAAa,IAAIC,gBACjBE,EAAa,mCAAG,wGAElBP,GAAW,GAFO,UAGiCgB,EAAAA,EAAAA,IACjDnB,EACAO,EAAWI,QALK,mBAGVpB,EAHU,EAGVA,WAAY6B,EAHF,EAGEA,cAHF,EAGgBR,OAHhB,oDAQlBS,EAAAA,EAAAA,IAAc9B,EAAW+B,OAAQF,GACjC5B,GAAc,OAAID,IATA,kDAYlBc,EAAS,EAAD,IAZU,yBAclBF,GAAW,GAdO,6EAAH,qDAmBnB,OADAO,IACO,kBAAMH,EAAWW,OAAjB,CArBW,CAsBnB,GAAE,CAAClB,EAAOD,EAAiBI,KAG5BG,EAAAA,EAAAA,YAAU,WACJF,IAAOmB,EAAAA,EAAAA,KACZ,GAAE,CAACnB,IAUJ,OACE,2BACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYoB,SAXO,SAAAC,GACvB,IAAMC,EAAkBD,EAAYE,OAAOC,cAC3C,GAAIF,IAAoB1B,EAAO,OAAO6B,EAAAA,EAAAA,IAAqB7B,GAC3DD,EAAgB,CAAEC,MAAO0B,GAC1B,IAQMxB,IAAW,SAAC,KAAD,KACZ,SAAC,KAAD,CAASX,WAAYA,EAAYuC,KAAM,OACrCvC,EAAW+B,SAAU,SAAC,KAAD,CAAS/B,WAAYA,EAAYuC,KAAM,MAC7DrC,IAASE,IAAc,SAAC,KAAD,CAAYoC,QATf,kBAAMrC,GAAQ,SAAAsC,GAAQ,OAAIA,EAAW,CAAf,GAAtB,QAa5B,C","sources":["pages/HomePage/HomePage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { SearchForm, LoadButton, Gallery, Loader, Container } from 'components';\nimport { getCharacters, alertOnError, getSearchedCharacters, alertOnSearch, alertOnRepeatedQuery } from 'services';\n\nexport default function HomePage() {\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getCards = async () => {\n      try {\n        setLoading(true);\n        const { characters, totalPages, cancel } = await getCharacters(\n          page,\n          controller.signal\n        );\n        if (cancel) return;\n        setCharacters(() => [...characters].sort((a, b) => a.name.localeCompare(b.name)));\n        setTotalPages(totalPages);\n\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCards();\n    return () => controller.abort();\n  }, [page, setSearchParams, setLoading]);\n\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n    const getCharacters = async () => {\n      try {\n        setLoading(true);\n        const { characters, totalResults, cancel } = await getSearchedCharacters(\n          query,\n          controller.signal\n        );\n        if (cancel) return;\n        alertOnSearch(characters.length, totalResults);\n        setCharacters([...characters]);\n\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCharacters();\n    return () => controller.abort();\n  }, [query, setSearchParams, setLoading]);\n\n\n  useEffect(() => {\n    if (error) alertOnError();\n  }, [error]);\n\n  const searchFormSubmit = searchQuery => {\n    const normalizedQuery = searchQuery.trim().toLowerCase();\n    if (normalizedQuery === query) return alertOnRepeatedQuery(query);\n    setSearchParams({ query: normalizedQuery });\n  };\n\n  const onLoadMoreBtnClick = () => setPage(prevPage => prevPage + 1);\n\n  return (\n    <main>\n      <Container>\n        <SearchForm onSubmit={searchFormSubmit} />\n        {loading && <Loader />}\n        <Gallery characters={characters} path={'/'} />\n        {!characters.length && <Gallery characters={characters} path={'/'} />}\n        {page !== totalPages && <LoadButton onClick={onLoadMoreBtnClick} />}\n      </Container>\n    </main>\n  );\n}\n"],"names":["HomePage","useState","characters","setCharacters","page","setPage","totalPages","setTotalPages","useSearchParams","searchParams","setSearchParams","query","get","loading","setLoading","error","setError","useEffect","controller","AbortController","getCards","getCharacters","signal","cancel","sort","a","b","name","localeCompare","abort","getSearchedCharacters","totalResults","alertOnSearch","length","alertOnError","onSubmit","searchQuery","normalizedQuery","trim","toLowerCase","alertOnRepeatedQuery","path","onClick","prevPage"],"sourceRoot":""}